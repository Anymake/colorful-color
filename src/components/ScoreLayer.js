import React, {
	Component
} from 'react';
import './scoreLayer.css';

class ScoreLayer extends Component {
	constructor(props) {
		super(props);
		this.state = {
			score: ''
		};
		this.setScoreLayer = this.setScoreLayer.bind(this);
	}

	setScoreLayer(){
		if(!this.props.score){
			return;
		}
		this.props.setScoreLayer(false);
	}

	render() {
		let layer_class = "score-layer ";
		layer_class += this.props.showScoreLayer ? "show" : "";
		let btn_tip_class = "btn_tip_wrap ";
		btn_tip_class += this.props.score ? "scored" : "";
		return (
			<div className={layer_class}>
				<div className="title">
					<span className="label">Score Generated By ANN: </span>
				</div>
				<div className="wrap">
				  <svg className="circle" viewBox="0,0,120,120">
				    <defs>
				      <linearGradient id="basic0" x1="0" y1="70%" x2="100%" y2="30%">
				        <stop offset="0%" style={{stopColor:"rgb(222,244,255)",stopOpacity:1}}>
				          <animate attributeName="stopColor" values="rgb(222,244,255);rgb(255,255,255);rgb(222,244,255)" dur="11s" repeatCount="indefinite" />
				        </stop>
				        <stop offset="100%" style={{stopColor:"rgb(183,189,255)",stopOpacity:1}}>
				          <animate attributeName="stopColor" values="rgb(183,189,255);rgb(240,240,245);rgb(183,189,255)" dur="11s" repeatCount="indefinite" />
				        </stop>
				      </linearGradient>
				      <linearGradient id="basic1" x1="0" y1="0%" x2="100%" y2="100%">
				        <stop offset="0%" style={{stopColor:"rgba(27,72,177,0.3)",stopOpacity:1}} />
				        <stop offset="100%" style={{stopColor:"rgba(27,72,177,0.7)",stopOpacity:1}}/>
				      </linearGradient>
				      <linearGradient id="basic2" x1="0" y1="0%" x2="100%" y2="100%">
				        <stop offset="0%" style={{stopColor:"rgba(74,192,223,0.3)",stopOpacity:1}} />
				        <stop offset="100%" style={{stopColor:"rgba(74,192,223,0.7)",stopOpacity:1}} />
				      </linearGradient>
				      <linearGradient id="basic3" x1="0" y1="0%" x2="100%" y2="100%">
				        <stop offset="0%" style={{stopColor:"rgba(140,114,192,0.3)",stopOpacity:0.9}} />
				        <stop offset="100%" style={{stopColor:"rgba(140,114,192,0.7)",stopOpacity:0.9}} />
				      </linearGradient>
				    </defs>
				    <g>
				      <path className="c1" d="m 40 25.35 q 20 -25.35 40 0 q 31.96 4.65 20 34.64 q 11.96 30 -20 34.64 q -20 25.35 -40 0 q -31.96 -4.65 -20 -34.64 q -11.96 -30 20 -34.64"/>
				      <animateTransform attributeName="transform" begin="0s" dur="17s" type="rotate" values="0 60 60;-180 59 59;-360 60 60" repeatCount="indefinite"/>
				    </g>
				    <g>
				      <path className="c2" d="m 40 25.35 q 20 -25.35 40 0 q 31.96 4.65 20 34.64 q 11.96 30 -20 34.64 q -20 25.35 -40 0 q -31.96 -4.65 -20 -34.64 q -11.96 -30 20 -34.64"/>
				      <animateTransform attributeName="transform" begin="0s" dur="13s" type="rotate" values="0 60 60;180 61 59;360 60 60" repeatCount="indefinite"/>
				    </g>
				    <g>
				      <path className="c3" d="m 40 25.35 q 20 -25.35 40 0 q 31.96 4.65 20 34.64 q 11.96 30 -20 34.64 q -20 25.35 -40 0 q -31.96 -4.65 -20 -34.64 q -11.96 -30 20 -34.64"/>
				      <animateTransform attributeName="transform" begin="0s" dur="11s" type="rotate" values="0 60 60;180 59 61;360 60 60" repeatCount="indefinite"/>
				    </g>
				    <g>
				      <circle cx="60" cy="60" r="45" className="c0">
				        <animate attributeName="r" values="45;40;45" dur="11s" repeatCount="indefinite" />
				      </circle>
				    </g>
				    <text className="scores" x="50%" y="50%" textAnchor="middle" dominantBaseline="middle">{this.props.score ? this.props.score.toFixed(1) : 'score...'}</text>
				  </svg>
				  <div className={btn_tip_class}>
    					<button className="btn" onClick={this.setScoreLayer} >OK</button>
    					<div className="tip">
    					  <p>Scoring is based on COLOR of image. If the result didn't satisfy you, just ignore it. </p>
    					  <p>Always believe in your work.</p>
    					</div>
  				  </div>
				</div>
			</div>
		);
	}
}

export default ScoreLayer;
